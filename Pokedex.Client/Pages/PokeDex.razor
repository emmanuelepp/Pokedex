@page "/"

@using Pokedex.Models;
@using Services;
@inject IApiClient ApiClient;

<h3>PokeDex</h3>

@if (pokemons == null)
{
    <p> <em>Loading...</em></p>
}
else
{
    <div class="container">
        @for (int i = 0; i < NumberOfRows; i++)
        {
            <div class="row mb-4" >
                @foreach (var poke in pokemons.Skip(i * 6).Take(6))
                {
                    <div class="card pokeCard mb-4 bg-@(poke.Types.FirstOrDefault().Type.Name)">
                        <div class="card-body"> 
                            <h4  class="card-title"> @poke.Name </h4>
                            <img src="@poke.Sprites.Front" 
                                 class="img-fluid" alt="@poke.Name"/>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
}

@code {

    IEnumerable<Pokemon> pokemons;
    public int NumberOfRows { get; set; } = 5;

    protected override async Task OnInitializedAsync()
    {
        pokemons = await ApiClient.GetAllPokemons();
    }
}
