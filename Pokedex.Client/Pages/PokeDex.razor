@page "/"

@using Pokedex.Models;
@using Services;
@inject IPokemonService _PokemonService;

<h3>PokeDex</h3>

@if (pokemons == null)
{
    <p> <em>Loading...</em></p>
}
else
{
    <div class="container">
        @for (int i = 0; i < NumberOfRows; i++)
        {
            <div class="row mb-4">
                @foreach (var poke in pokemons.Skip(i * 6).Take(6) ?? Enumerable.Empty<Pokemon>())
                {
                    <div class="col-md-3 col-lg-2 mb-3">
                        <div class="card bg-@(poke.Types.FirstOrDefault().Type.Name.ToLower())">
                            <img src="@poke.Sprites.Front" class="card-img-top" alt="@poke.Name">
                            <div class="card-body text-center">
                                <h5 class="card-title">@poke.Name</h5>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
}

@code {

    IEnumerable<Pokemon>? pokemons;

    public int NumberOfRows { get; set; } = 5;

    protected override async Task OnInitializedAsync()
    {
        pokemons = await _PokemonService.GetAllPokemons();
    }
}
